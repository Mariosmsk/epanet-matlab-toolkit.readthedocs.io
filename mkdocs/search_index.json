{
    "docs": [
        {
            "location": "/", 
            "text": "EPANET-MATLAB-Toolkit\n\n\nThe \nEPANET-Matlab Toolkit\n is an open-source software, originally developed by the \nKIOS Research Center for Intelligent Systems and Networks of the University of Cyprus\n which operates within the Matlab environment, for providing a programming interface for the latest version of \nEPANET\n, a hydraulic and quality modeling software created by the US EPA, with Matlab, a  high-level technical computing software. The goal of the EPANET Matlab Toolkit is to serve as a common programming framework for research and development in the growing field of smart water networks.\n\n\nThe \nEPANET-Matlab Toolkit\n features easy to use commands/wrappers for viewing, modifying, simulating and plotting results produced by the EPANET libraries.  \n\n\nFor support, please use the OWA community forum : \nhttp://community.wateranalytics.org/\n\n\nRequirements\n\n\n\n\nMatlab\n\n\nEPANET 2.1\n \n\n\n\n\nHow to use the Toolkit\n\n\nDownload the folder \nDownload ZIP\n, set the run path in Matlab within the saved folder, and run \nRunTests.m\n. This will execute all the commands which have been implemented in the Class.\n\n\nExample:\n\n\nd=epanet('Net1.inp')\n\n\nd.getNodeCount\n\n\nd.getNodeElevations\n\n\nHow to fix/report bugs\n\n\nTo fix a bug \nFork\n the \nEPANET-Matlab Toolkit\n, \nEdit\n the code and make the appropriate change, and then \nPull\n it so that we evaluate it. \n\n\nKeep in mind that some bugs may exist in the \nEPANET\n libraries, in case you are not receiving the expected results.\n\n\nLicenses\n\n\n\n\nEPANET\n: Public Domain\n\n\nEPANET-MSX\n: GNU Lesser General Public License\n\n\nEPANET-Matlab Toolkit\n: EUPL \n\n\n\n\nContributors\n\n\n\n\nMarios Kyriakou, \nKIOS Research Center for Intelligent Systems and Networks, University of Cyprus\n\n\nDemetrios Eliades, \nKIOS Research Center for Intelligent Systems and Networks, University of Cyprus\n\n\n\n\nThe \nEPANET-Matlab Toolkit\n is based/inspired on the \nEPANET-Matlab Toolkit\n as well as the OpenWaterAnalytics \nEPANET-Matlab Wrappers\n\n\nList of Matlab Class Functions\n\n\n\n\n\n\n\n\nFunction\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nepanet\n\n\nLoad Input file and open the EPANET Toolkit system\n\n\n\n\n\n\nunload\n\n\nUnload library and close the EPANET Toolkit system\n\n\n\n\n\n\nloadEPANETFile\n\n\nOpen the EPANET Toolkit system\n\n\n\n\n\n\ngetError\n\n\nReturns the description of an error code\n\n\n\n\n\n\ngetComputedHydraulicTimeSeries\n\n\nComputed Hydraulic Time Series\n\n\n\n\n\n\ngetComputedQualityTimeSeries\n\n\nComputed Quality Time Series\n\n\n\n\n\n\ngetComputedTimeSeries\n\n\nComputed Hydraulic \n Quality Time Series via ENepanet binary file\n\n\n\n\n\n\ngetConnectivityMatrix\n\n\nReturn connectivity matrix of the network\n\n\n\n\n\n\ngetControlRulesCount\n\n\nRetrieves the number of control rules\n\n\n\n\n\n\ngetControls\n\n\nRetrieves the controls\n\n\n\n\n\n\ngetCurveCount\n\n\nRetrieves the number of curves\n\n\n\n\n\n\ngetCurveIndex\n\n\nRetrieves index of curve with specific ID\n\n\n\n\n\n\ngetCurveLengths\n\n\nRetrieves number of points in a curve\n\n\n\n\n\n\ngetCurveNameID\n\n\nRetrieves curve id\n\n\n\n\n\n\ngetCurveValue\n\n\nRetrieves (x,y) values of specific curve index\n\n\n\n\n\n\ngetCurveXY\n\n\nRetrieves (x,y) values of all curves\n\n\n\n\n\n\ngetENfunctionsImpemented\n\n\nRetrieves the epanet functions that have been developed\n\n\n\n\n\n\ngetFlowUnits\n\n\nRetrieves the units used to express all flow rates\n\n\n\n\n\n\ngetLibFunctions\n\n\nRetrieves the functions of DLL\n\n\n\n\n\n\ngetLinkBulkReactionCoeff\n\n\nRetrieves the value of all link bulk reaction coefficients\n\n\n\n\n\n\ngetLinkCount\n\n\nRetrieves the number of links\n\n\n\n\n\n\ngetLinkDiameter\n\n\nRetrieves the value of all link diameters\n\n\n\n\n\n\ngetLinkEnergy\n\n\nRetrieves the value of all computed energy in kwatts\n\n\n\n\n\n\ngetLinkEfficiency\n\n\nRetrieves the value of all computed efficiency\n\n\n\n\n\n\ngetLinkFlows\n\n\nRetrieves the value of all computed link flow rates\n\n\n\n\n\n\ngetLinkHeadloss\n\n\nRetrieves the value of all computed link headloss\n\n\n\n\n\n\ngetLinkIndex\n\n\nRetrieves the indices of all links, or the indices of an ID set of links\n\n\n\n\n\n\ngetLinkInitialSetting\n\n\nRetrieves the value of all link roughness for pipes or initial speed for pumps or initial setting for valves\n\n\n\n\n\n\ngetLinkInitialStatus\n\n\nRetrieves the value of all link initial status\n\n\n\n\n\n\ngetLinkLength\n\n\nRetrieves the value of all link lengths\n\n\n\n\n\n\ngetLinkMinorLossCoeff\n\n\nRetrieves the value of all link minor loss coefficients\n\n\n\n\n\n\ngetLinkNameID\n\n\nRetrieves the ID label(s) of all links, or the IDs of an index set of links\n\n\n\n\n\n\ngetLinkNodesIndex\n\n\nRetrieves the indexes of the from/to nodes of all links\n\n\n\n\n\n\ngetLinkPipeCount\n\n\nRetrieves the number of pipes\n\n\n\n\n\n\ngetLinkPipeIndex\n\n\nRetrieves the indices of pipes\n\n\n\n\n\n\ngetLinkPipeNameID\n\n\nRetrieves the pipe IDs\n\n\n\n\n\n\ngetLinkPumpCount\n\n\nRetrieves the number of pumps\n\n\n\n\n\n\ngetLinkPumpHeadCurveIndex\n\n\nRetrieves index of a head curve for specific link index\n\n\n\n\n\n\ngetLinkPumpIndex\n\n\nRetrieves the indices of pumps\n\n\n\n\n\n\ngetLinkPumpNameID\n\n\nRetrieves the pump IDs\n\n\n\n\n\n\ngetLinkPumpPatternIndex\n\n\nRetrieves the pump pattern indices\n\n\n\n\n\n\ngetLinkPumpPatternNameID\n\n\nRetrieves the pump pattern IDs\n\n\n\n\n\n\ngetLinkPumpType\n\n\nRetrieves the type of a pump for specific link index\n\n\n\n\n\n\ngetLinkPumpTypeCode\n\n\nRetrieves the type code of a pump for specific link index\n\n\n\n\n\n\ngetLinkPumpSwitches\n\n\nCalculates the number of pump switches\n\n\n\n\n\n\ngetLinkQuality\n\n\nRetrieves the quality of links\n\n\n\n\n\n\ngetLinkRoughnessCoeff\n\n\nRetrieves the value of all link roughness\n\n\n\n\n\n\ngetLinkSettings\n\n\nRetrieves the value of all computed link roughness for pipes or actual speed for pumps or actual setting for valves\n\n\n\n\n\n\ngetLinkStatus\n\n\nRetrieves the value of all computed link status (0 = closed, 1 = open)\n\n\n\n\n\n\ngetLinkType\n\n\nRetrieves the link-type for all links\n\n\n\n\n\n\ngetLinkTypeIndex\n\n\nRetrieves the link-type code for all links.\n\n\n\n\n\n\ngetLinkValveCount\n\n\nRetrieves the number of valves\n\n\n\n\n\n\ngetLinkValveIndex\n\n\nRetrieves the indices of valves\n\n\n\n\n\n\ngetLinkValveNameID\n\n\nRetrieves the valve IDs\n\n\n\n\n\n\ngetLinkVelocity\n\n\nRetrieves the value of all computed link velocities\n\n\n\n\n\n\ngetLinkWallReactionCoeff\n\n\nRetrieves the value of all link wall reaction coefficients\n\n\n\n\n\n\ngetNodeActualDemand\n\n\nRetrieves the computed value of all actual demands\n\n\n\n\n\n\ngetNodeActualDemandSensingNodes\n\n\nRetrieves the computed demand values at some sensing nodes\n\n\n\n\n\n\ngetNodeActualQuality\n\n\nRetrieves the computed values of the actual quality for all nodes\n\n\n\n\n\n\ngetNodeActualQualitySensingNodes\n\n\nRetrieves the computed quality values at some sensing nodes\n\n\n\n\n\n\ngetNodeBaseDemands\n\n\nRetrieves the value of all node base demands\n\n\n\n\n\n\ngetNodeCoordinates\n\n\nRetrieves coordinate x, y, and x, y vertices for a node\n\n\n\n\n\n\ngetNodeCount\n\n\nRetrieves the number of nodes\n\n\n\n\n\n\ngetNodePatternIndex\n\n\nRetrieves the value of all node pattern indices\n\n\n\n\n\n\ngetNodeDemandPatternIndex\n\n\nRetrieves the value of all node demand pattern indices\n\n\n\n\n\n\ngetNodeDemandPatternNameID\n\n\nRetrieves the value of all node demand pattern IDs\n\n\n\n\n\n\ngetNodeElevations\n\n\nRetrieves the value of all node elevations\n\n\n\n\n\n\ngetNodeEmitterCoeff\n\n\nRetrieves the value of all node emmitter coefficients\n\n\n\n\n\n\ngetNodeHydaulicHead\n\n\nRetrieves the computed values of all hydraulic heads\n\n\n\n\n\n\ngetNodeIndex\n\n\nRetrieves the indices of all nodes or some nodes with a specified ID\n\n\n\n\n\n\ngetNodeInitialQuality\n\n\nRetrieves the value of all node initial quality\n\n\n\n\n\n\ngetNodeJunctionCount\n\n\nRetrieves the number of junctions\n\n\n\n\n\n\ngetNodeJunctionIndex\n\n\nRetrieves the junctions indices\n\n\n\n\n\n\ngetNodeJunctionNameID\n\n\nRetrieves the junctions IDs\n\n\n\n\n\n\ngetNodeMassFlowRate\n\n\nRetrieves the computed mass flow rates per minute of chemical sources\n\n\n\n\n\n\ngetNodeNameID\n\n\nRetrieves the ID label of all nodes or some nodes with a specified index\n\n\n\n\n\n\ngetNodeDemandCategoriesNumber\n\n\nRetrieves the number of demand categories for a node\n\n\n\n\n\n\ngetNodePressure\n\n\nRetrieves the computed values of all node pressures\n\n\n\n\n\n\ngetNodeReservoirCount\n\n\nRetrieves the number of reservoirs\n\n\n\n\n\n\ngetNodeReservoirIndex\n\n\nRetrieves the indices of reservoirs\n\n\n\n\n\n\ngetNodeReservoirNameID\n\n\nRetrieves the reservoirs IDs\n\n\n\n\n\n\ngetNodeSourcePatternIndex\n\n\nRetrieves the value of all node source pattern index\n\n\n\n\n\n\ngetNodeSourceQuality\n\n\nRetrieves the value of all nodes source quality\n\n\n\n\n\n\ngetNodeSourceType\n\n\nRetrieves the value of all node source type\n\n\n\n\n\n\ngetNodeTankBulkReactionCoeff\n\n\nRetrieves the tank bulk rate coefficient\n\n\n\n\n\n\ngetNodeTankCount\n\n\nRetrieves the number of tanks\n\n\n\n\n\n\ngetNodeTankDiameter\n\n\nRetrieves the tank diameters\n\n\n\n\n\n\ngetNodeTankIndex\n\n\nRetrieves the indices of tanks\n\n\n\n\n\n\ngetNodeTankInitialLevel\n\n\nRetrieves the value of all tank initial water levels\n\n\n\n\n\n\ngetNodeTankInitialWaterVolume\n\n\nRetrieves the tank initial volume\n\n\n\n\n\n\ngetNodeTankMaximumWaterVolume\n\n\nRetrieves maximum water volume\n\n\n\n\n\n\ngetNodeTankMaximumWaterLevel\n\n\nRetrieves the tank maximum water level\n\n\n\n\n\n\ngetNodeTankMinimumFraction\n\n\nRetrieves the tank Fraction of total volume occupied by the inlet/outlet zone in a 2-compartment tank\n\n\n\n\n\n\ngetNodeTankMinimumWaterLevel\n\n\nRetrieves the tank minimum water level\n\n\n\n\n\n\ngetNodeTankMinimumWaterVolume\n\n\nRetrieves the tank minimum volume\n\n\n\n\n\n\ngetNodeTankMixZoneVolume\n\n\nRetrieves the tank mixing zone volume\n\n\n\n\n\n\ngetNodeTankMixingModelCode\n\n\nRetrieves the tank mixing model code\n\n\n\n\n\n\ngetNodeTankMixingModelType\n\n\nRetrieves the tank mixing model type (mix1, mix2, fifo, lifo)\n\n\n\n\n\n\ngetNodeTankMixiningModel\n\n\nRetrieves the tank mixing model\n\n\n\n\n\n\ngetNodeTankNameID\n\n\nRetrieves the tanks IDs\n\n\n\n\n\n\ngetNodeTankReservoirCount\n\n\nRetrieves the number of tanks\n\n\n\n\n\n\ngetNodeTankVolume\n\n\nRetrieves the tank volume\n\n\n\n\n\n\ngetNodeTankVolumeCurveIndex\n\n\nRetrieves the tank volume curve index\n\n\n\n\n\n\ngetNodeType\n\n\nRetrieves the node-type for all nodes\n\n\n\n\n\n\ngetNodeTypeIndex\n\n\nRetrieves the node code-index for all nodes\n\n\n\n\n\n\ngetNodesConnectingLinksID\n\n\nRetrieves the id of the from/to nodes of all links\n\n\n\n\n\n\ngetOptionsAccuracyValue\n\n\nRetrieve the analysis convergence criterion (0.001)\n\n\n\n\n\n\ngetOptionsEmitterExponent\n\n\nRetrieve power exponent for the emmitters (0.5)\n\n\n\n\n\n\ngetOptionsMaxTrials\n\n\nRetrieve maximum number of analysis trials\n\n\n\n\n\n\ngetOptionsPatternDemandMultiplier\n\n\nRetrieve the demand multiplier (x1)\n\n\n\n\n\n\ngetOptionsQualityTolerance\n\n\nRetrieve the water quality analysis tolerance\n\n\n\n\n\n\ngetPattern\n\n\nRetrieves the multiplier factor for all patterns and all times\n\n\n\n\n\n\ngetPatternAveragePatternValue\n\n\nRetrieves the average value of a pattern\n\n\n\n\n\n\ngetPatternCount\n\n\nRetrieves the number of patterns\n\n\n\n\n\n\ngetPatternIndex\n\n\nRetrieves the index of all or some time patterns IDs\n\n\n\n\n\n\ngetPatternLengths\n\n\nRetrieves the number of time periods in all or some patterns\n\n\n\n\n\n\ngetPatternNameID\n\n\nRetrieves the patterns IDs\n\n\n\n\n\n\ngetPatternValue\n\n\nRetrieves the multiplier factor for a certain pattern and time\n\n\n\n\n\n\ngetQualityCode\n\n\nRetrieves the code of water quality analysis type\n\n\n\n\n\n\ngetQualityInfo\n\n\nRetrieves the quality info - bug in ENgetqualinfo\n\n\n\n\n\n\ngetQualityTraceNodeIndex\n\n\nRetrieves the trace node index of water quality analysis type\n\n\n\n\n\n\ngetQualityType\n\n\nRetrieves the type of water quality analysis type\n\n\n\n\n\n\ngetStatistic\n\n\nRetrieves hydraulic simulation statistic\n\n\n\n\n\n\ngetTimeHTime\n\n\nRetrieves the number of htime\n\n\n\n\n\n\ngetTimeQTime\n\n\nRetrieves the number of qtime\n\n\n\n\n\n\ngetTimeHaltFlag\n\n\nRetrieves the number of  halt flag\n\n\n\n\n\n\ngetTimeHydraulicStep\n\n\nRetrieves the value of the hydraulic time step\n\n\n\n\n\n\ngetTimeNextEvent\n\n\nRetrieves the number of next event\n\n\n\n\n\n\ngetTimePatternStart\n\n\nRetrieves the value of pattern start time\n\n\n\n\n\n\ngetTimePatternStep\n\n\nRetrieves the value of the pattern time step\n\n\n\n\n\n\ngetTimeQualityStep\n\n\nRetrieves the value of the water quality time step\n\n\n\n\n\n\ngetTimeReportingPeriods\n\n\nRetrieves the number of reporting periods saved to the binary\n\n\n\n\n\n\ngetTimeReportingStart\n\n\nRetrie ves the value of the reporting start time\n\n\n\n\n\n\ngetTimeReportingStep\n\n\nRetrieves the value of the reporting time step\n\n\n\n\n\n\ngetTimeRuleControlStep\n\n\nRetrieves the time step for evaluating rule-based controls\n\n\n\n\n\n\ngetTimeSimulationDuration\n\n\nRetrieves the value of simulation duration\n\n\n\n\n\n\ngetTimeStartTime\n\n\nRetrieves the number of start time\n\n\n\n\n\n\ngetTimeStatisticsType\n\n\nRetrieves the type of time series post-processing ('NONE','AVERAGE','MINIMUM','MAXIMUM', 'RANGE')\n\n\n\n\n\n\ngetTimeStatisticsIndex\n\n\nRetrieves the type of time series post-processing\n\n\n\n\n\n\ngetVersion\n\n\nRetrieve the current EPANET version of DLL\n\n\n\n\n\n\ngetNodesInfo\n\n\nRetrieves nodes info e.g. elevations, demand pattern indices, emitter coeff. , initial quality, source quality, source pattern indices, source type code, type indices\n\n\n\n\n\n\ngetLinksInfo\n\n\nRetrieves links info e.g. diameters, lengths, roughness coeff. , minor loss coeff. , initial status, initial settings, bulk reaction coeff. , wall reaction coeff. , nodes connecting link indices, type indices\n\n\n\n\n\n\naddCurve\n\n\nAdds a new curve appended to the end of the existing curves\n\n\n\n\n\n\naddPattern\n\n\nAdds a new time pattern to the network\n\n\n\n\n\n\naddNodeJunction\n\n\nAdds a new junction\n\n\n\n\n\n\naddNodeReservoir\n\n\nAdds a new reservoir\n\n\n\n\n\n\naddNodeTank\n\n\nAdds a new tank\n\n\n\n\n\n\naddLinkPipeCV\n\n\nAdds a new CV pipe\n\n\n\n\n\n\naddLinkPipe\n\n\nAdds a new pipe\n\n\n\n\n\n\naddLinkPump\n\n\nAdds a new pump\n\n\n\n\n\n\naddLinkValvePRV\n\n\nAdds a new PRV valve\n\n\n\n\n\n\naddLinkValvePSV\n\n\nAdds a new PSV valve\n\n\n\n\n\n\naddLinkValvePBV\n\n\nAdds a new PBV valve\n\n\n\n\n\n\naddLinkValveFCV\n\n\nAdds a new FCV valve\n\n\n\n\n\n\naddLinkValveTCV\n\n\nAdds a new TCV valve\n\n\n\n\n\n\naddLinkValveGPV\n\n\nAdds a new GPV valve\n\n\n\n\n\n\ndeleteNode\n\n\nDeletes a node\n\n\n\n\n\n\ndeleteLink\n\n\nDeletes a link\n\n\n\n\n\n\ncloseHydraulicAnalysis\n\n\nCloses the hydraulic analysis system, freeing all allocated memory\n\n\n\n\n\n\ncloseNetwork\n\n\nCloses down the Toolkit system\n\n\n\n\n\n\ncloseQualityAnalysis\n\n\nCloses the water quality analysis system, freeing all allocated memory\n\n\n\n\n\n\ninitializeHydraulicAnalysis\n\n\nInitializes storage tank levels, link status and settings, and the simulation clock time prior to running a hydraulic analysis\n\n\n\n\n\n\ninitializeQualityAnalysis\n\n\nInitializes water quality and the simulation clock time prior to running a water quality analysis\n\n\n\n\n\n\nnextHydraulicAnalysisStep\n\n\nDetermines the length of time until the next hydraulic event occurs in an extended period simulation\n\n\n\n\n\n\nnextQualityAnalysisStep\n\n\nAdvances the water quality simulation to the start of the next hydraulic time period\n\n\n\n\n\n\nopenHydraulicAnalysis\n\n\nOpens the hydraulics analysis system\n\n\n\n\n\n\nopenQualityAnalysis\n\n\nOpens the water quality analysis system\n\n\n\n\n\n\nrunHydraulicAnalysis\n\n\nRuns a single period hydraulic analysis, retrieving the current simulation clock time t\n\n\n\n\n\n\nrunQualityAnalysis\n\n\nMakes available the hydraulic and water quality results that occur at the start of the next time period of a water quality analysis, where the start of the period is returned in t\n\n\n\n\n\n\nsaveHydraulicFile\n\n\nSaves the current contents of the binary hydraulics file to a file\n\n\n\n\n\n\nsaveHydraulicsOutputReportingFile\n\n\nTransfers results of a hydraulic simulation from the binary Hydraulics file to the binary Output file, where results are only reported at uniform reporting intervals\n\n\n\n\n\n\nsaveInputFile\n\n\nWrites all current network input data to a file using the format of an EPANET input file\n\n\n\n\n\n\nplot\n\n\nPlot the network input file\n\n\n\n\n\n\nsetControl\n\n\nSets the parameters of a simple control statement\n\n\n\n\n\n\nsetCurve\n\n\nSets x,y values for a specific curve\n\n\n\n\n\n\nsetCurveValue\n\n\nRetrieves x,y point for a specific point number and curve\n\n\n\n\n\n\nsetLinkBulkReactionCoeff\n\n\nSets the values of bulk reactions\n\n\n\n\n\n\nsetLinkDiameter\n\n\nSets the values of diameters\n\n\n\n\n\n\nsetLinkPumpHeadCurveIndex\n\n\nSets the curves index for pumps index\n\n\n\n\n\n\nsetLinkInitialSetting\n\n\nSets the values of initial settings\n\n\n\n\n\n\nsetLinkInitialStatus\n\n\nSets the values of initial status\n\n\n\n\n\n\nsetLinkLength\n\n\nSets the values of lengths\n\n\n\n\n\n\nsetLinkMinorLossCoeff\n\n\nSets the values of minor loss coeff.\n\n\n\n\n\n\nsetLinkRoughnessCoeff\n\n\nSets the values of roughness coeff.\n\n\n\n\n\n\nsetLinkSettings\n\n\nSets the values of settings\n\n\n\n\n\n\nsetLinkStatus\n\n\nSets the values of status\n\n\n\n\n\n\nsetLinkWallReactionCoeff\n\n\nSets the values of wall reactions\n\n\n\n\n\n\nsetNodeBaseDemands\n\n\nSets the values of demands\n\n\n\n\n\n\nsetNodeCoordinates\n\n\nSets node coordinates\n\n\n\n\n\n\nsetNodeDemandPatternIndex\n\n\nSets the values of demand pattern indices\n\n\n\n\n\n\nsetNodeElevations\n\n\nSets the values of elevations\n\n\n\n\n\n\nsetNodeEmitterCoeff\n\n\nSets the values of emitter coeff.\n\n\n\n\n\n\nsetNodeInitialQuality\n\n\nSets the values of initial qualities\n\n\n\n\n\n\nsetNodeSourcePatternIndex\n\n\nSets the values of source pattern indices\n\n\n\n\n\n\nsetNodeSourceQuality\n\n\nSets the values of source qualities\n\n\n\n\n\n\nsetNodeSourceType\n\n\nSets the values of source types\n\n\n\n\n\n\nsetNodeTankBulkReactionCoeff\n\n\nSets the values of tank bulk reaction coeff.\n\n\n\n\n\n\nsetNodeTankDiameter\n\n\nSets the values of tanks diameter\n\n\n\n\n\n\nsetNodeTankInitialLevel\n\n\nSets the values of tanks initial level\n\n\n\n\n\n\nsetNodeTankMaximumWaterLevel\n\n\nSets the values of tanks maximum water level\n\n\n\n\n\n\nsetNodeTankMinimumWaterLevel\n\n\nSets the values of tanks minimum water level\n\n\n\n\n\n\nsetNodeTankMinimumFraction\n\n\nSets the values of tanks mix fraction\n\n\n\n\n\n\nsetNodeTankMinimumWaterVolume\n\n\nSets the values of tanks minimum water volume\n\n\n\n\n\n\nsetNodeTankMixingModelType\n\n\nSets the values of tanks model\n\n\n\n\n\n\nsetOptionsAccuracyValue\n\n\nSets the value of accurancy\n\n\n\n\n\n\nsetOptionsEmitterExponent\n\n\nSets the value of emitter exponent\n\n\n\n\n\n\nsetOptionsMaxTrials\n\n\nSets the value of max trials\n\n\n\n\n\n\nsetOptionsPatternDemandMultiplier\n\n\nSets the value of pattern demand multiplier\n\n\n\n\n\n\nsetOptionsQualityTolerance\n\n\nSets the value of tolerance\n\n\n\n\n\n\nsetPattern\n\n\nSets all of the multiplier factors for a specific time pattern\n\n\n\n\n\n\nsetPatternMatrix\n\n\nSets all of the multiplier factors for all patterns\n\n\n\n\n\n\nsetPatternValue\n\n\nSets the multiplier factor for a specific period within a time pattern\n\n\n\n\n\n\nsetQualityType\n\n\nSets the type of water quality analysis called for\n\n\n\n\n\n\nsetReport\n\n\nIssues a report formatting command. Formatting commands are the same as used in the [REPORT] section of the EPANET Input file\n\n\n\n\n\n\nsetReportFormatReset\n\n\nClears any report formatting commands that either appeared in the [REPORT] section of the EPANET Input file or were issued with the ENsetreport function\n\n\n\n\n\n\nsetReportStatus\n\n\nSets the level of hydraulic status reporting\n\n\n\n\n\n\nsetTimeHTime\n\n\nSets the htime\n\n\n\n\n\n\nsetTimeHaltFlag\n\n\nSets the halt flag\n\n\n\n\n\n\nsetTimeHydraulicStep\n\n\nSets the hydraulic step\n\n\n\n\n\n\nsetTimePatternStart\n\n\nSets the pattern start\n\n\n\n\n\n\nsetTimePatternStep\n\n\nSets the pattern step\n\n\n\n\n\n\nsetTimeQualityStep\n\n\nSets the quality step\n\n\n\n\n\n\nsetTimeReportingStart\n\n\nSets the reporting start\n\n\n\n\n\n\nsetTimeReportingStep\n\n\nSets the reporting step\n\n\n\n\n\n\nsetTimeRuleControlStep\n\n\nSets the rule control step\n\n\n\n\n\n\nsetTimeSimulationDuration\n\n\nSets the simulation duration\n\n\n\n\n\n\nsetTimeStatisticsType\n\n\nSets the statistic type\n\n\n\n\n\n\nsolveCompleteHydraulics\n\n\nRuns a complete hydraulic simulation with results for all time periods written to the binary Hydraulics file\n\n\n\n\n\n\nsolveCompleteQuality\n\n\nRuns a complete water quality simulation with results at uniform reporting intervals written to EPANET's binary Output file\n\n\n\n\n\n\nstepQualityAnalysisTimeLeft\n\n\nAdvances the water quality simulation one water quality time step. The time remaining in the overall simulation is returned in tleft\n\n\n\n\n\n\nuseHydraulicFile\n\n\nUses the contents of the specified file as the current binary hydraulics file\n\n\n\n\n\n\nwriteLineInReportFile\n\n\nWrites a line of text to the EPANET report file\n\n\n\n\n\n\nwriteReport\n\n\nWrites a formatted text report on simulation results to the Report file\n\n\n\n\n\n\n MSX Functions \n\n\n\n\n\n\n\n\nloadMSXFile\n\n\nOpens the EPANET-MSX toolkit system\n\n\n\n\n\n\naddMSXPattern\n\n\nAdds a new, empty MSX source time pattern to the project\n\n\n\n\n\n\ninitializeMSXQualityAnalysis\n\n\nInitializes the MSX system before solving for water quality results in step-wise fashion\n\n\n\n\n\n\nsaveMSXFile\n\n\nSaves the data associated with the current MSX project into a new MSX input file\n\n\n\n\n\n\nsaveMSXQualityFile\n\n\nSaves water quality results computed for each node, link and reporting time period to a named binary file\n\n\n\n\n\n\nsolveMSXCompleteHydraulics\n\n\nSolves for system hydraulics over the entire simulation period saving results to an internal scratch file\n\n\n\n\n\n\nsolveMSXCompleteQuality\n\n\nSolves for water quality over the entire simulation period and saves the results to an internal scratch file\n\n\n\n\n\n\nstepMSXQualityAnalysisTimeLeft\n\n\nAdvances the water quality solution through a single water quality time step when performing a step-wise simulation\n\n\n\n\n\n\nwriteMSXFile\n\n\nWrite a new MSX file\n\n\n\n\n\n\nwriteMSXReport\n\n\nWrites water quality simulations results as instructed by the MSX input file to a text file\n\n\n\n\n\n\nwriteMSXReportExe\n\n\nWrites water quality simulations results as instructed by the MSX input file to a specific name text file\n\n\n\n\n\n\nuseMSXHydraulicFile\n\n\nUses a previously saved EPANET hydraulics file as the source of hydraulic information\n\n\n\n\n\n\nplotMSXConcentrationSpeciesOfLinks\n\n\nPlots the concentration species of links\n\n\n\n\n\n\nplotMSXConcentrationSpeciesOfNodes\n\n\nPlots the concentration species of nodes\n\n\n\n\n\n\nrunMSXexe\n\n\nWrites water quality simulations results as instructed by the MSX input file to a text file using the epanetmsx.exe\n\n\n\n\n\n\nunloadMSX\n\n\nCloses the EPANET-MSX toolkit system\n\n\n\n\n\n\ngetMSXAtol\n\n\nRetrieves the absolute concentration tolerance\n\n\n\n\n\n\ngetMSXRtol\n\n\nRetrieves the relative concentration tolerance\n\n\n\n\n\n\ngetMSXComputedQualityLink\n\n\nRetrieves the concentration of a chemical species at a specific link of the network at the current simulation time step\n\n\n\n\n\n\ngetMSXComputedQualityNode\n\n\nRetrieves the concentration of a chemical species at a specific node of the network at the current simulation time step.\n\n\n\n\n\n\ngetMSXConstantsCount\n\n\nRetrieves the number of constants\n\n\n\n\n\n\ngetMSXConstantsIndex\n\n\nRetrieves the internal index number of constants (given its ID name)\n\n\n\n\n\n\ngetMSXConstantsNameID\n\n\nRetrieves the ID name of constants (given its internal index number)\n\n\n\n\n\n\ngetMSXConstantsValue\n\n\nRetrieves the value of a particular reaction constant\n\n\n\n\n\n\ngetMSXError\n\n\nReturns the text for an error message given its error code\n\n\n\n\n\n\ngetMSXLinkInitqualValue\n\n\nRetrieves the initial concentration of chemical species assigned to links of the pipe network\n\n\n\n\n\n\ngetMSXNodeInitqualValue\n\n\nRetrieves the initial concentration of chemical species assigned to nodes\n\n\n\n\n\n\ngetMSXParametersCount\n\n\nRetrieves the number of parameters\n\n\n\n\n\n\ngetMSXParametersIndex\n\n\nRetrieves the indices of parameters\n\n\n\n\n\n\ngetMSXParametersNameID\n\n\nRetrieves the ID name of parameters\n\n\n\n\n\n\ngetMSXParametersPipesValue\n\n\nRetrieves the value of reaction parameters for pipes\n\n\n\n\n\n\ngetMSXParametersTanksValue\n\n\nRetrieves the value of reaction parameters for tanks\n\n\n\n\n\n\ngetMSXPattern\n\n\nRetrieves the multiplier factor for all patterns and all times\n\n\n\n\n\n\ngetMSXPatternValue\n\n\nRetrieves the multiplier at a specific time period for a given source time pattern\n\n\n\n\n\n\ngetMSXPatternsCount\n\n\nRetrieves the number of patterns\n\n\n\n\n\n\ngetMSXPatternsIndex\n\n\nRetrieves the indices of patterns\n\n\n\n\n\n\ngetMSXPatternsLengths\n\n\nRetrieves the number of time periods in all or some patterns\n\n\n\n\n\n\ngetMSXPatternsNameID\n\n\nRetrieves the patterns IDs\n\n\n\n\n\n\ngetMSXSourceLevel\n\n\nRetrieves the value of all nodes source level\n\n\n\n\n\n\ngetMSXSourceNodeNameID\n\n\nRetrieves the ID label of all nodes\n\n\n\n\n\n\ngetMSXSourcePatternIndex\n\n\nRetrieves the value of all node source pattern index\n\n\n\n\n\n\ngetMSXSourceType\n\n\nRetrieves the value of all node source type\n\n\n\n\n\n\ngetMSXSources\n\n\nRetrieves the source info\n\n\n\n\n\n\ngetMSXSpeciesATOL\n\n\nRetrieves the atol\n\n\n\n\n\n\ngetMSXSpeciesRTOL\n\n\nRetrieves the rtol\n\n\n\n\n\n\ngetMSXSpeciesConcentration\n\n\nRetrieves the concentration of chemical species for nodes and links\n\n\n\n\n\n\ngetMSXSpeciesCount\n\n\nRetrieves the number of species\n\n\n\n\n\n\ngetMSXSpeciesIndex\n\n\nRetrieves the indices of species\n\n\n\n\n\n\ngetMSXSpeciesNameID\n\n\nRetrieves the species IDs\n\n\n\n\n\n\ngetMSXSpeciesType\n\n\nRetrieves the type of all species (BULK/WALL)\n\n\n\n\n\n\ngetMSXSpeciesUnits\n\n\nRetrieves the species mass units\n\n\n\n\n\n\ngetMSXTimeStep\n\n\nRetrieves the time step\n\n\n\n\n\n\ngetMSXRateUnits\n\n\nRetrieves the rate/time units (SEC/MIN/HR/DAY)\n\n\n\n\n\n\ngetMSXAreaUnits\n\n\nRetrieves the area units (FT2/M2/CM2)\n\n\n\n\n\n\ngetMSXCompiler\n\n\nRetrieves the compiler (NONE/VC/GC)\n\n\n\n\n\n\ngetMSXCoupling\n\n\nRetrieves the coupling (FULL/NONE)\n\n\n\n\n\n\ngetMSXEquationsPipes\n\n\nRetrieves the species dynamics in pipes\n\n\n\n\n\n\ngetMSXEquationsTanks\n\n\nRetrieves the species dynamics in tanks\n\n\n\n\n\n\ngetMSXEquationsTerms\n\n\nRetrieves the species dynamics in terms\n\n\n\n\n\n\ngetMSXSolver\n\n\nRetrieves the solver (EUL/RK5/ROS2)\n\n\n\n\n\n\nsetMSXAreaUnitsCM2\n\n\nSets area units to CM2\n\n\n\n\n\n\nsetMSXAreaUnitsFT2\n\n\nSets area units to FT2\n\n\n\n\n\n\nsetMSXAreaUnitsM2\n\n\nSets area units to M2\n\n\n\n\n\n\nsetMSXAtol\n\n\nSets the value of Atol\n\n\n\n\n\n\nsetMSXRtol\n\n\nSets the value of Rtol\n\n\n\n\n\n\nsetMSXCompilerGC\n\n\nSets compilet to GC\n\n\n\n\n\n\nsetMSXCompilerNONE\n\n\nSets compiler to None\n\n\n\n\n\n\nsetMSXCompilerVC\n\n\nSets compiler to VC\n\n\n\n\n\n\nsetMSXConstantsValue\n\n\nAssigns a new value to a specific reaction constant\n\n\n\n\n\n\nsetMSXCouplingFULL\n\n\nSets coupling option to FULL\n\n\n\n\n\n\nsetMSXCouplingNONE\n\n\nSets coupling option to NONE\n\n\n\n\n\n\nsetMSXLinkInitqualValue\n\n\nAssigns an initial concentration of chemical species to links\n\n\n\n\n\n\nsetMSXNodeInitqualValue\n\n\nAssigns an initial concentration of chemical species to nodes\n\n\n\n\n\n\nsetMSXParametersPipesValue\n\n\nAssigns a value to a particular reaction parameter for given pipes\n\n\n\n\n\n\nsetMSXParametersTanksValue\n\n\nAssigns a value to a particular reaction parameter for given tanks\n\n\n\n\n\n\nsetMSXPattern\n\n\nSets all of the multiplier factors for a specific time pattern\n\n\n\n\n\n\nsetMSXPatternMatrix\n\n\nSets all of the multiplier factors for all patterns\n\n\n\n\n\n\nsetMSXPatternValue\n\n\nAssigns a new value to the multiplier for a specific time period in a given MSX source time pattern\n\n\n\n\n\n\nsetMSXRateUnitsDAY\n\n\nSets rate units to DAY\n\n\n\n\n\n\nsetMSXRateUnitsHR\n\n\nSets rate units to HR\n\n\n\n\n\n\nsetMSXRateUnitsMIN\n\n\nSets rate units to MIN\n\n\n\n\n\n\nsetMSXRateUnitsSEC\n\n\nSets rate units to SEC\n\n\n\n\n\n\nsetMSXSolverEUL\n\n\nSets solver to EUL (standard Euler integrator)\n\n\n\n\n\n\nsetMSXSolverRK5\n\n\nSets solver to RK5 (Runge-Kutta 5th order integrator)\n\n\n\n\n\n\nsetMSXSolverROS2\n\n\nSets solver to ROS2 (2nd order Rosenbrock integrator)\n\n\n\n\n\n\nsetMSXSources\n\n\nSets the attributes of an external source of a particular chemical species to a specific node of the pipe network\n\n\n\n\n\n\nsetMSXTimeStep\n\n\nSets time step\n\n\n\n\n\n\nBin Functions\n\n\n\n\n\n\n\n\nBinClose\n\n\nClose binary files and delete\n\n\n\n\n\n\nBinUpdateClass\n\n\nRun all bin functions and update the results\n\n\n\n\n\n\nBinplot\n\n\nPlot the network input file\n\n\n\n\n\n\naddBinControl\n\n\nAdds a new control to the network\n\n\n\n\n\n\naddBinCurveEfficiency\n\n\nAdds a new curve efficiency to the network\n\n\n\n\n\n\naddBinCurveHeadloss\n\n\nAdds a new curve headloss to the network\n\n\n\n\n\n\naddBinCurvePump\n\n\nAdds a new curve pump to the network\n\n\n\n\n\n\naddBinCurveVolume\n\n\nAdds a new curve volume to the network\n\n\n\n\n\n\naddBinJunction\n\n\nAdds a new junction to the network\n\n\n\n\n\n\naddBinPattern\n\n\nAdds a new time pattern to the network\n\n\n\n\n\n\naddBinPipe\n\n\nAdds a new pipe to the network\n\n\n\n\n\n\naddBinPump\n\n\nAdds a new pump to the network\n\n\n\n\n\n\naddBinReservoir\n\n\nAdds a new reservoir to the network\n\n\n\n\n\n\naddBinTank\n\n\nAdds a new tank to the network\n\n\n\n\n\n\naddBinValveFCV\n\n\nAdds a new valve FCV to the network\n\n\n\n\n\n\naddBinValveGPV\n\n\nAdds a new valve GPV to the network\n\n\n\n\n\n\naddBinValvePBV\n\n\nAdds a new valve PBV to the network\n\n\n\n\n\n\naddBinValvePRV\n\n\nAdds a new valve PRV to the network\n\n\n\n\n\n\naddBinValvePSV\n\n\nAdds a new valve PSV to the network\n\n\n\n\n\n\naddBinValveTCV\n\n\nAdds a new valve TCV to the network\n\n\n\n\n\n\nremoveBinControlLinkID\n\n\nRemoves a specific control based on link ID\n\n\n\n\n\n\nremoveBinControlNodeID\n\n\nRemoves a specific control based on node ID\n\n\n\n\n\n\nremoveBinCurveID\n\n\nRemoves a specific curve based on ID\n\n\n\n\n\n\nremoveBinLinkID\n\n\nRemoves a specific link based on ID\n\n\n\n\n\n\nremoveBinNodeID\n\n\nRemoves a specific node based on ID\n\n\n\n\n\n\nremoveBinRulesControlLinkID\n\n\nRemoves a specific rule based on link ID\n\n\n\n\n\n\nremoveBinRulesControlNodeID\n\n\nRemoves a specific rule based on node ID\n\n\n\n\n\n\nsaveBinInpFile\n\n\nWrites all current network input data to a file using the format of an EPANET input file\n\n\n\n\n\n\ngetBinComputedAllParameters\n\n\nComputes hydraulic and quality time series\n\n\n\n\n\n\ngetBinComputedAverageBulkReactionRate\n\n\nComputes the average bulk reaction rate\n\n\n\n\n\n\ngetBinComputedAverageCostPerDay\n\n\nComputes the average cost per day\n\n\n\n\n\n\ngetBinComputedAverageEfficiency\n\n\nComputes the average efficiency\n\n\n\n\n\n\ngetBinComputedAverageKwatts\n\n\nComputes the average Kwatts\n\n\n\n\n\n\ngetBinComputedAverageKwattsOrMillionGallons\n\n\nComputes the average Kwatts or million gallons\n\n\n\n\n\n\ngetBinComputedAverageSourceInflow\n\n\nComputes the average source inflow\n\n\n\n\n\n\ngetBinComputedAverageTankReactionRate\n\n\nComputes the average tank reaction rate\n\n\n\n\n\n\ngetBinComputedAverageWallReactionRate\n\n\nComputes average wall reaction rate\n\n\n\n\n\n\ngetBinComputedLinkFlow\n\n\nComputes the flow of links\n\n\n\n\n\n\ngetBinComputedLinkFrictionFactor\n\n\nComputes the link friction factor\n\n\n\n\n\n\ngetBinComputedLinkHeadloss\n\n\nComputes the headloss of links\n\n\n\n\n\n\ngetBinComputedLinkQuality\n\n\nComputes the quality of links\n\n\n\n\n\n\ngetBinComputedLinkReactionRate\n\n\nComputes the reaction rate of links\n\n\n\n\n\n\ngetBinComputedLinkSetting\n\n\nComputes the setting of links\n\n\n\n\n\n\ngetBinComputedLinkStatus\n\n\nComputes the status of links\n\n\n\n\n\n\ngetBinComputedLinkVelocity\n\n\nComputes the velocity of links\n\n\n\n\n\n\ngetBinComputedNodeDemand\n\n\nComputes the demand of nodes\n\n\n\n\n\n\ngetBinComputedNodeHead\n\n\nComputes the head of nodes\n\n\n\n\n\n\ngetBinComputedNodePressure\n\n\nComputes the pressure of nodes\n\n\n\n\n\n\ngetBinComputedNodeQuality\n\n\nComputes the quality of nodes\n\n\n\n\n\n\ngetBinComputedPeakKwatts\n\n\nComputes the peak Kwatts\n\n\n\n\n\n\ngetBinComputedPumpIndexListLinks\n\n\nRetrieves the pump indices\n\n\n\n\n\n\ngetBinComputedPumpUtilization\n\n\nComputes the pump utilization\n\n\n\n\n\n\ngetBinDiameterEachLink\n\n\nRetrieves the diameter of each link\n\n\n\n\n\n\ngetBinLengthEachLink\n\n\nRetrieves the length of each link\n\n\n\n\n\n\ngetBinLinkIndex\n\n\nRetrieves the indices of all links\n\n\n\n\n\n\ngetBinLinkNameID\n\n\nRetrieves the ID label(s) of all links\n\n\n\n\n\n\ngetBinElevationEachNode\n\n\nRetrieves the elevation of each node\n\n\n\n\n\n\ngetBinNodeCoordinates\n\n\nRetrieves coordinate x, y, and x, y vertices for a node\n\n\n\n\n\n\ngetBinNodeIndex\n\n\nRetrieves the indices of all nodes\n\n\n\n\n\n\ngetBinNodeNameID\n\n\nRetrieves the ID label(s) of all nodes\n\n\n\n\n\n\ngetBinNumberReportingPeriods\n\n\nRetrieves the number of reporting periods\n\n\n\n\n\n\ngetBinControlsInfo\n\n\nRetrieves the controls info\n\n\n\n\n\n\ngetBinCurvesInfo\n\n\nRetrieves the curves info\n\n\n\n\n\n\ngetBinLinksInfo\n\n\nRetrieves the links info\n\n\n\n\n\n\ngetBinLimitingPotential\n\n\nRetrieves limiting potential\n\n\n\n\n\n\ngetBinNodesInfo\n\n\nRetrieves the nodes info\n\n\n\n\n\n\ngetBinNodeSourceInfo\n\n\nRetrieves the sources info\n\n\n\n\n\n\ngetBinOptionsInfo\n\n\nRetrieves the options info\n\n\n\n\n\n\ngetBinPatternsInfo\n\n\nRetrieves the patterns info\n\n\n\n\n\n\ngetBinRulesControlsInfo\n\n\nRetrieves the controls info\n\n\n\n\n\n\ngetBinTimesInfo\n\n\nRetrieves the times info\n\n\n\n\n\n\ngetBinPatternIndex\n\n\nRetrieves the indices of all patterns\n\n\n\n\n\n\ngetBinSimulationDuration\n\n\nRetrieves the value of simulation duration\n\n\n\n\n\n\ngetBinSections\n\n\nRetrieves some basic sections from inp file\n\n\n\n\n\n\ngetBinUnits\n\n\nRetrieves the units used to express all flow rates\n\n\n\n\n\n\nsetBinFlowUnitsAFD\n\n\nSets flow units to AFD\n\n\n\n\n\n\nsetBinFlowUnitsCFS\n\n\nSets flow units to CFS\n\n\n\n\n\n\nsetBinFlowUnitsCMD\n\n\nSets flow units to CMD\n\n\n\n\n\n\nsetBinFlowUnitsCMH\n\n\nSets flow units to CMH\n\n\n\n\n\n\nsetBinFlowUnitsGPM\n\n\nSets flow units to GPM\n\n\n\n\n\n\nsetBinFlowUnitsIMGD\n\n\nSets flow units to IMGD\n\n\n\n\n\n\nsetBinFlowUnitsLPM\n\n\nSets flow units to LPM\n\n\n\n\n\n\nsetBinFlowUnitsLPS\n\n\nSets flow units to LPS\n\n\n\n\n\n\nsetBinFlowUnitsMGD\n\n\nSets flow units to MGD\n\n\n\n\n\n\nsetBinFlowUnitsMLD\n\n\nSets flow units to MLD\n\n\n\n\n\n\nsetBinHeadlossCM\n\n\nSets headloss to C-M\n\n\n\n\n\n\nsetBinHeadlossDW\n\n\nSets headloss to D-W\n\n\n\n\n\n\nsetBinHeadlossHW\n\n\nSets headloss to H-W\n\n\n\n\n\n\nsetBinLinkGlobalBulkReactionCoeff\n\n\nSets the global bulk reaction rate coeff.\n\n\n\n\n\n\nsetBinLinkGlobalWallReactionCoeff\n\n\nSets the global wall reaction rate coeff.\n\n\n\n\n\n\nsetBinLimitingPotential\n\n\nSets limiting potential\n\n\n\n\n\n\nsetBinLinkPipeDiameters\n\n\nSets the values of pipe diameters\n\n\n\n\n\n\nsetBinLinkPipeLengths\n\n\nSets the values of pipe lengths\n\n\n\n\n\n\nsetBinLinkPipeMinorLoss\n\n\nSets the values of pipe minor losses\n\n\n\n\n\n\nsetBinLinkPipeRoughness\n\n\nSets the values of pipe roughness\n\n\n\n\n\n\nsetBinLinkPipeStatus\n\n\nSets the values of pipe status\n\n\n\n\n\n\nsetBinLinkPipesParameters\n\n\nSets the values of pipe parameters (diameters, lengths, minor losses, roughness, status)\n\n\n\n\n\n\nsetBinLinkPumpStatus\n\n\nSets the values of pump status\n\n\n\n\n\n\nsetBinLinkReactionCoeff\n\n\nSets the values of bulk and wall reaction coeff.\n\n\n\n\n\n\nsetBinLinkValvesParameters\n\n\nSets the values of valve parameters (diameters, types, settings, minor losses)\n\n\n\n\n\n\nsetBinNodeJunDemandPatternNameID\n\n\nSets the names of demand pattern IDs for junctions\n\n\n\n\n\n\nsetBinNodeInitialQuality\n\n\nSets the values of initial qualities\n\n\n\n\n\n\nsetBinNodeJunctionElevation\n\n\nSets the values of elevations for junctions\n\n\n\n\n\n\nsetBinNodeJunctionsBaseDemands\n\n\nSets the values of base demands\n\n\n\n\n\n\nsetBinNodeJunctionsParameters\n\n\nSets the values of junction parameters (elevations, base demands, demand patterns)\n\n\n\n\n\n\nsetBinNodeResDemandPatternNameID\n\n\nSets the names of demand pattern IDs for reservoirs\n\n\n\n\n\n\nsetBinNodeReservoirElevation\n\n\nSets the values of elevations for reservoirs\n\n\n\n\n\n\nsetBinNodeReservoirParameters\n\n\nSets the values of reservoir parameters (elevations, patterns)\n\n\n\n\n\n\nsetBinNodeSourceQuality\n\n\nSets the values of source qualities\n\n\n\n\n\n\nsetBinNodeTankDiameter\n\n\nSets the values of tanks diameter\n\n\n\n\n\n\nsetBinNodeTankElevation\n\n\nSets the values of tanks elevation\n\n\n\n\n\n\nsetBinNodeTankInitialLevel\n\n\nSets the values of tanks initial level\n\n\n\n\n\n\nsetBinNodeTankMaximumWaterLevel\n\n\nSets the values of tanks maximum water level\n\n\n\n\n\n\nsetBinNodeTankMinimumWaterLevel\n\n\nSets the values of tanks minimum water level\n\n\n\n\n\n\nsetBinNodeTankMinimumWaterVolume\n\n\nSets the values of tanks minimum water volume\n\n\n\n\n\n\nsetBinNodeTankParameters\n\n\nSets the values of reservoir parameters (elevations, initialLevels, minLevels, maxLevels, diameters, minVolume, mixfraction)\n\n\n\n\n\n\nsetBinPattern\n\n\nSets all of the multiplier factors for a specific time pattern\n\n\n\n\n\n\nsetBinQualityAge\n\n\nSets the type of water quality analysis to Age\n\n\n\n\n\n\nsetBinQualityChem\n\n\nSets the type of water quality analysis to Chem\n\n\n\n\n\n\nsetBinQualityNone\n\n\nSets the type of water quality analysis to None\n\n\n\n\n\n\nsetBinQualityTrace\n\n\nSets the type of water quality analysis to Trace\n\n\n\n\n\n\nsetBinQualType\n\n\nSets the type of water quality analysis to any chem e.g. chlorine\n\n\n\n\n\n\nsetBinTimeHydraulicStep\n\n\nSets the hydraulic step\n\n\n\n\n\n\nsetBinTimePatternStart\n\n\nSets the pattern start\n\n\n\n\n\n\nsetBinTimePatternStep\n\n\nSets the pattern step\n\n\n\n\n\n\nsetBinTimeQualityStep\n\n\nSets the quality step\n\n\n\n\n\n\nsetBinTimeReportingStart\n\n\nSets the reporting start\n\n\n\n\n\n\nsetBinTimeReportingStep\n\n\nSets the reporting step\n\n\n\n\n\n\nsetBinTimeSimulationDuration\n\n\nSets the simulation duration\n\n\n\n\n\n\nsetBinTimeStatisticsAverage\n\n\nSets the statistic type to Average\n\n\n\n\n\n\nsetBinTimeStatisticsMaximum\n\n\nSets the statistic type to Maximum\n\n\n\n\n\n\nsetBinTimeStatisticsMinimum\n\n\nSets the statistic type to Minimum\n\n\n\n\n\n\nsetBinTimeStatisticsNone\n\n\nSets the statistic type to None\n\n\n\n\n\n\nsetBinTimeStatisticsRange\n\n\nSets the statistic type to Range\n\n\n\n\n\n\n\n\nList of EPANET 2.1 Functions Supported\n\n\n\n\n\n\n\n\nFunction\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nENgetpumptype\n\n\nRetrieves the type of a pump for specific link index\n\n\n\n\n\n\nENgetheadcurveindex\n\n\nRetrieves index of a head curve for specific link index\n\n\n\n\n\n\nENsetcurvevalue\n\n\nSets x,y point for a specific point and curve\n\n\n\n\n\n\nENsetcurve\n\n\nSets x,y values for a specific curve\n\n\n\n\n\n\nENaddcurve\n\n\nAdds a new curve appended to the end of the existing curves\n\n\n\n\n\n\nENgetcurvevalue\n\n\nRetrieves x,y point for a specific point number and curve\n\n\n\n\n\n\nENgetcurvelen\n\n\nRetrieves number of points in a curve\n\n\n\n\n\n\nENgetcurveid\n\n\nRetrieves ID of a curve with specific index\n\n\n\n\n\n\nENgetcurveindex\n\n\nRetrieves index of curve with specific ID\n\n\n\n\n\n\nENsetcoord\n\n\nSets coordinate x, y for a node\n\n\n\n\n\n\nENgetcoord\n\n\nRetrieves coordinate x, y for a node\n\n\n\n\n\n\nENgetstatistic\n\n\nRetrieves hydraulic simulation statistic\n\n\n\n\n\n\nENgetnumdemands\n\n\nRetrieves the number of demand categories for a node\n\n\n\n\n\n\nENgetbasedemand\n\n\nRetrieves the nodes base demand for a category\n\n\n\n\n\n\nENgetdemandpattern\n\n\nRetrieves the index of a demand pattern for a specific demand category of a node\n\n\n\n\n\n\nENsetbasedemand\n\n\nSets the nodes base demand for a category\n\n\n\n\n\n\nENgetaveragepatternvalue\n\n\nRetrieves the average value of a pattern\n\n\n\n\n\n\n\n\nList of other new EPANET Functions Supported\n\n\n\n\n\n\n\n\nFunction\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\nENaddnode\n\n\nAdds a new node\n\n\n\n\n\n\nENaddlink\n\n\nAdds a new link\n\n\n\n\n\n\nENdeletenode\n\n\nDeletes a node\n\n\n\n\n\n\nENdeletelink\n\n\nDeletes a link\n\n\n\n\n\n\nENsetheadcurveindex\n\n\nSets the curve index for a specified pump index\n\n\n\n\n\n\nENsetdemandpattern\n\n\nSets the index of the demand pattern assigned to a node for a category index.", 
            "title": "Home"
        }, 
        {
            "location": "/#epanet-matlab-toolkit", 
            "text": "The  EPANET-Matlab Toolkit  is an open-source software, originally developed by the  KIOS Research Center for Intelligent Systems and Networks of the University of Cyprus  which operates within the Matlab environment, for providing a programming interface for the latest version of  EPANET , a hydraulic and quality modeling software created by the US EPA, with Matlab, a  high-level technical computing software. The goal of the EPANET Matlab Toolkit is to serve as a common programming framework for research and development in the growing field of smart water networks.  The  EPANET-Matlab Toolkit  features easy to use commands/wrappers for viewing, modifying, simulating and plotting results produced by the EPANET libraries.    For support, please use the OWA community forum :  http://community.wateranalytics.org/", 
            "title": "EPANET-MATLAB-Toolkit"
        }, 
        {
            "location": "/#requirements", 
            "text": "Matlab  EPANET 2.1", 
            "title": "Requirements"
        }, 
        {
            "location": "/#how-to-use-the-toolkit", 
            "text": "Download the folder  Download ZIP , set the run path in Matlab within the saved folder, and run  RunTests.m . This will execute all the commands which have been implemented in the Class.  Example:  d=epanet('Net1.inp')  d.getNodeCount  d.getNodeElevations", 
            "title": "How to use the Toolkit"
        }, 
        {
            "location": "/#how-to-fixreport-bugs", 
            "text": "To fix a bug  Fork  the  EPANET-Matlab Toolkit ,  Edit  the code and make the appropriate change, and then  Pull  it so that we evaluate it.   Keep in mind that some bugs may exist in the  EPANET  libraries, in case you are not receiving the expected results.", 
            "title": "How to fix/report bugs"
        }, 
        {
            "location": "/#licenses", 
            "text": "EPANET : Public Domain  EPANET-MSX : GNU Lesser General Public License  EPANET-Matlab Toolkit : EUPL", 
            "title": "Licenses"
        }, 
        {
            "location": "/#contributors", 
            "text": "Marios Kyriakou,  KIOS Research Center for Intelligent Systems and Networks, University of Cyprus  Demetrios Eliades,  KIOS Research Center for Intelligent Systems and Networks, University of Cyprus   The  EPANET-Matlab Toolkit  is based/inspired on the  EPANET-Matlab Toolkit  as well as the OpenWaterAnalytics  EPANET-Matlab Wrappers", 
            "title": "Contributors"
        }, 
        {
            "location": "/#list-of-matlab-class-functions", 
            "text": "Function  Description      epanet  Load Input file and open the EPANET Toolkit system    unload  Unload library and close the EPANET Toolkit system    loadEPANETFile  Open the EPANET Toolkit system    getError  Returns the description of an error code    getComputedHydraulicTimeSeries  Computed Hydraulic Time Series    getComputedQualityTimeSeries  Computed Quality Time Series    getComputedTimeSeries  Computed Hydraulic   Quality Time Series via ENepanet binary file    getConnectivityMatrix  Return connectivity matrix of the network    getControlRulesCount  Retrieves the number of control rules    getControls  Retrieves the controls    getCurveCount  Retrieves the number of curves    getCurveIndex  Retrieves index of curve with specific ID    getCurveLengths  Retrieves number of points in a curve    getCurveNameID  Retrieves curve id    getCurveValue  Retrieves (x,y) values of specific curve index    getCurveXY  Retrieves (x,y) values of all curves    getENfunctionsImpemented  Retrieves the epanet functions that have been developed    getFlowUnits  Retrieves the units used to express all flow rates    getLibFunctions  Retrieves the functions of DLL    getLinkBulkReactionCoeff  Retrieves the value of all link bulk reaction coefficients    getLinkCount  Retrieves the number of links    getLinkDiameter  Retrieves the value of all link diameters    getLinkEnergy  Retrieves the value of all computed energy in kwatts    getLinkEfficiency  Retrieves the value of all computed efficiency    getLinkFlows  Retrieves the value of all computed link flow rates    getLinkHeadloss  Retrieves the value of all computed link headloss    getLinkIndex  Retrieves the indices of all links, or the indices of an ID set of links    getLinkInitialSetting  Retrieves the value of all link roughness for pipes or initial speed for pumps or initial setting for valves    getLinkInitialStatus  Retrieves the value of all link initial status    getLinkLength  Retrieves the value of all link lengths    getLinkMinorLossCoeff  Retrieves the value of all link minor loss coefficients    getLinkNameID  Retrieves the ID label(s) of all links, or the IDs of an index set of links    getLinkNodesIndex  Retrieves the indexes of the from/to nodes of all links    getLinkPipeCount  Retrieves the number of pipes    getLinkPipeIndex  Retrieves the indices of pipes    getLinkPipeNameID  Retrieves the pipe IDs    getLinkPumpCount  Retrieves the number of pumps    getLinkPumpHeadCurveIndex  Retrieves index of a head curve for specific link index    getLinkPumpIndex  Retrieves the indices of pumps    getLinkPumpNameID  Retrieves the pump IDs    getLinkPumpPatternIndex  Retrieves the pump pattern indices    getLinkPumpPatternNameID  Retrieves the pump pattern IDs    getLinkPumpType  Retrieves the type of a pump for specific link index    getLinkPumpTypeCode  Retrieves the type code of a pump for specific link index    getLinkPumpSwitches  Calculates the number of pump switches    getLinkQuality  Retrieves the quality of links    getLinkRoughnessCoeff  Retrieves the value of all link roughness    getLinkSettings  Retrieves the value of all computed link roughness for pipes or actual speed for pumps or actual setting for valves    getLinkStatus  Retrieves the value of all computed link status (0 = closed, 1 = open)    getLinkType  Retrieves the link-type for all links    getLinkTypeIndex  Retrieves the link-type code for all links.    getLinkValveCount  Retrieves the number of valves    getLinkValveIndex  Retrieves the indices of valves    getLinkValveNameID  Retrieves the valve IDs    getLinkVelocity  Retrieves the value of all computed link velocities    getLinkWallReactionCoeff  Retrieves the value of all link wall reaction coefficients    getNodeActualDemand  Retrieves the computed value of all actual demands    getNodeActualDemandSensingNodes  Retrieves the computed demand values at some sensing nodes    getNodeActualQuality  Retrieves the computed values of the actual quality for all nodes    getNodeActualQualitySensingNodes  Retrieves the computed quality values at some sensing nodes    getNodeBaseDemands  Retrieves the value of all node base demands    getNodeCoordinates  Retrieves coordinate x, y, and x, y vertices for a node    getNodeCount  Retrieves the number of nodes    getNodePatternIndex  Retrieves the value of all node pattern indices    getNodeDemandPatternIndex  Retrieves the value of all node demand pattern indices    getNodeDemandPatternNameID  Retrieves the value of all node demand pattern IDs    getNodeElevations  Retrieves the value of all node elevations    getNodeEmitterCoeff  Retrieves the value of all node emmitter coefficients    getNodeHydaulicHead  Retrieves the computed values of all hydraulic heads    getNodeIndex  Retrieves the indices of all nodes or some nodes with a specified ID    getNodeInitialQuality  Retrieves the value of all node initial quality    getNodeJunctionCount  Retrieves the number of junctions    getNodeJunctionIndex  Retrieves the junctions indices    getNodeJunctionNameID  Retrieves the junctions IDs    getNodeMassFlowRate  Retrieves the computed mass flow rates per minute of chemical sources    getNodeNameID  Retrieves the ID label of all nodes or some nodes with a specified index    getNodeDemandCategoriesNumber  Retrieves the number of demand categories for a node    getNodePressure  Retrieves the computed values of all node pressures    getNodeReservoirCount  Retrieves the number of reservoirs    getNodeReservoirIndex  Retrieves the indices of reservoirs    getNodeReservoirNameID  Retrieves the reservoirs IDs    getNodeSourcePatternIndex  Retrieves the value of all node source pattern index    getNodeSourceQuality  Retrieves the value of all nodes source quality    getNodeSourceType  Retrieves the value of all node source type    getNodeTankBulkReactionCoeff  Retrieves the tank bulk rate coefficient    getNodeTankCount  Retrieves the number of tanks    getNodeTankDiameter  Retrieves the tank diameters    getNodeTankIndex  Retrieves the indices of tanks    getNodeTankInitialLevel  Retrieves the value of all tank initial water levels    getNodeTankInitialWaterVolume  Retrieves the tank initial volume    getNodeTankMaximumWaterVolume  Retrieves maximum water volume    getNodeTankMaximumWaterLevel  Retrieves the tank maximum water level    getNodeTankMinimumFraction  Retrieves the tank Fraction of total volume occupied by the inlet/outlet zone in a 2-compartment tank    getNodeTankMinimumWaterLevel  Retrieves the tank minimum water level    getNodeTankMinimumWaterVolume  Retrieves the tank minimum volume    getNodeTankMixZoneVolume  Retrieves the tank mixing zone volume    getNodeTankMixingModelCode  Retrieves the tank mixing model code    getNodeTankMixingModelType  Retrieves the tank mixing model type (mix1, mix2, fifo, lifo)    getNodeTankMixiningModel  Retrieves the tank mixing model    getNodeTankNameID  Retrieves the tanks IDs    getNodeTankReservoirCount  Retrieves the number of tanks    getNodeTankVolume  Retrieves the tank volume    getNodeTankVolumeCurveIndex  Retrieves the tank volume curve index    getNodeType  Retrieves the node-type for all nodes    getNodeTypeIndex  Retrieves the node code-index for all nodes    getNodesConnectingLinksID  Retrieves the id of the from/to nodes of all links    getOptionsAccuracyValue  Retrieve the analysis convergence criterion (0.001)    getOptionsEmitterExponent  Retrieve power exponent for the emmitters (0.5)    getOptionsMaxTrials  Retrieve maximum number of analysis trials    getOptionsPatternDemandMultiplier  Retrieve the demand multiplier (x1)    getOptionsQualityTolerance  Retrieve the water quality analysis tolerance    getPattern  Retrieves the multiplier factor for all patterns and all times    getPatternAveragePatternValue  Retrieves the average value of a pattern    getPatternCount  Retrieves the number of patterns    getPatternIndex  Retrieves the index of all or some time patterns IDs    getPatternLengths  Retrieves the number of time periods in all or some patterns    getPatternNameID  Retrieves the patterns IDs    getPatternValue  Retrieves the multiplier factor for a certain pattern and time    getQualityCode  Retrieves the code of water quality analysis type    getQualityInfo  Retrieves the quality info - bug in ENgetqualinfo    getQualityTraceNodeIndex  Retrieves the trace node index of water quality analysis type    getQualityType  Retrieves the type of water quality analysis type    getStatistic  Retrieves hydraulic simulation statistic    getTimeHTime  Retrieves the number of htime    getTimeQTime  Retrieves the number of qtime    getTimeHaltFlag  Retrieves the number of  halt flag    getTimeHydraulicStep  Retrieves the value of the hydraulic time step    getTimeNextEvent  Retrieves the number of next event    getTimePatternStart  Retrieves the value of pattern start time    getTimePatternStep  Retrieves the value of the pattern time step    getTimeQualityStep  Retrieves the value of the water quality time step    getTimeReportingPeriods  Retrieves the number of reporting periods saved to the binary    getTimeReportingStart  Retrie ves the value of the reporting start time    getTimeReportingStep  Retrieves the value of the reporting time step    getTimeRuleControlStep  Retrieves the time step for evaluating rule-based controls    getTimeSimulationDuration  Retrieves the value of simulation duration    getTimeStartTime  Retrieves the number of start time    getTimeStatisticsType  Retrieves the type of time series post-processing ('NONE','AVERAGE','MINIMUM','MAXIMUM', 'RANGE')    getTimeStatisticsIndex  Retrieves the type of time series post-processing    getVersion  Retrieve the current EPANET version of DLL    getNodesInfo  Retrieves nodes info e.g. elevations, demand pattern indices, emitter coeff. , initial quality, source quality, source pattern indices, source type code, type indices    getLinksInfo  Retrieves links info e.g. diameters, lengths, roughness coeff. , minor loss coeff. , initial status, initial settings, bulk reaction coeff. , wall reaction coeff. , nodes connecting link indices, type indices    addCurve  Adds a new curve appended to the end of the existing curves    addPattern  Adds a new time pattern to the network    addNodeJunction  Adds a new junction    addNodeReservoir  Adds a new reservoir    addNodeTank  Adds a new tank    addLinkPipeCV  Adds a new CV pipe    addLinkPipe  Adds a new pipe    addLinkPump  Adds a new pump    addLinkValvePRV  Adds a new PRV valve    addLinkValvePSV  Adds a new PSV valve    addLinkValvePBV  Adds a new PBV valve    addLinkValveFCV  Adds a new FCV valve    addLinkValveTCV  Adds a new TCV valve    addLinkValveGPV  Adds a new GPV valve    deleteNode  Deletes a node    deleteLink  Deletes a link    closeHydraulicAnalysis  Closes the hydraulic analysis system, freeing all allocated memory    closeNetwork  Closes down the Toolkit system    closeQualityAnalysis  Closes the water quality analysis system, freeing all allocated memory    initializeHydraulicAnalysis  Initializes storage tank levels, link status and settings, and the simulation clock time prior to running a hydraulic analysis    initializeQualityAnalysis  Initializes water quality and the simulation clock time prior to running a water quality analysis    nextHydraulicAnalysisStep  Determines the length of time until the next hydraulic event occurs in an extended period simulation    nextQualityAnalysisStep  Advances the water quality simulation to the start of the next hydraulic time period    openHydraulicAnalysis  Opens the hydraulics analysis system    openQualityAnalysis  Opens the water quality analysis system    runHydraulicAnalysis  Runs a single period hydraulic analysis, retrieving the current simulation clock time t    runQualityAnalysis  Makes available the hydraulic and water quality results that occur at the start of the next time period of a water quality analysis, where the start of the period is returned in t    saveHydraulicFile  Saves the current contents of the binary hydraulics file to a file    saveHydraulicsOutputReportingFile  Transfers results of a hydraulic simulation from the binary Hydraulics file to the binary Output file, where results are only reported at uniform reporting intervals    saveInputFile  Writes all current network input data to a file using the format of an EPANET input file    plot  Plot the network input file    setControl  Sets the parameters of a simple control statement    setCurve  Sets x,y values for a specific curve    setCurveValue  Retrieves x,y point for a specific point number and curve    setLinkBulkReactionCoeff  Sets the values of bulk reactions    setLinkDiameter  Sets the values of diameters    setLinkPumpHeadCurveIndex  Sets the curves index for pumps index    setLinkInitialSetting  Sets the values of initial settings    setLinkInitialStatus  Sets the values of initial status    setLinkLength  Sets the values of lengths    setLinkMinorLossCoeff  Sets the values of minor loss coeff.    setLinkRoughnessCoeff  Sets the values of roughness coeff.    setLinkSettings  Sets the values of settings    setLinkStatus  Sets the values of status    setLinkWallReactionCoeff  Sets the values of wall reactions    setNodeBaseDemands  Sets the values of demands    setNodeCoordinates  Sets node coordinates    setNodeDemandPatternIndex  Sets the values of demand pattern indices    setNodeElevations  Sets the values of elevations    setNodeEmitterCoeff  Sets the values of emitter coeff.    setNodeInitialQuality  Sets the values of initial qualities    setNodeSourcePatternIndex  Sets the values of source pattern indices    setNodeSourceQuality  Sets the values of source qualities    setNodeSourceType  Sets the values of source types    setNodeTankBulkReactionCoeff  Sets the values of tank bulk reaction coeff.    setNodeTankDiameter  Sets the values of tanks diameter    setNodeTankInitialLevel  Sets the values of tanks initial level    setNodeTankMaximumWaterLevel  Sets the values of tanks maximum water level    setNodeTankMinimumWaterLevel  Sets the values of tanks minimum water level    setNodeTankMinimumFraction  Sets the values of tanks mix fraction    setNodeTankMinimumWaterVolume  Sets the values of tanks minimum water volume    setNodeTankMixingModelType  Sets the values of tanks model    setOptionsAccuracyValue  Sets the value of accurancy    setOptionsEmitterExponent  Sets the value of emitter exponent    setOptionsMaxTrials  Sets the value of max trials    setOptionsPatternDemandMultiplier  Sets the value of pattern demand multiplier    setOptionsQualityTolerance  Sets the value of tolerance    setPattern  Sets all of the multiplier factors for a specific time pattern    setPatternMatrix  Sets all of the multiplier factors for all patterns    setPatternValue  Sets the multiplier factor for a specific period within a time pattern    setQualityType  Sets the type of water quality analysis called for    setReport  Issues a report formatting command. Formatting commands are the same as used in the [REPORT] section of the EPANET Input file    setReportFormatReset  Clears any report formatting commands that either appeared in the [REPORT] section of the EPANET Input file or were issued with the ENsetreport function    setReportStatus  Sets the level of hydraulic status reporting    setTimeHTime  Sets the htime    setTimeHaltFlag  Sets the halt flag    setTimeHydraulicStep  Sets the hydraulic step    setTimePatternStart  Sets the pattern start    setTimePatternStep  Sets the pattern step    setTimeQualityStep  Sets the quality step    setTimeReportingStart  Sets the reporting start    setTimeReportingStep  Sets the reporting step    setTimeRuleControlStep  Sets the rule control step    setTimeSimulationDuration  Sets the simulation duration    setTimeStatisticsType  Sets the statistic type    solveCompleteHydraulics  Runs a complete hydraulic simulation with results for all time periods written to the binary Hydraulics file    solveCompleteQuality  Runs a complete water quality simulation with results at uniform reporting intervals written to EPANET's binary Output file    stepQualityAnalysisTimeLeft  Advances the water quality simulation one water quality time step. The time remaining in the overall simulation is returned in tleft    useHydraulicFile  Uses the contents of the specified file as the current binary hydraulics file    writeLineInReportFile  Writes a line of text to the EPANET report file    writeReport  Writes a formatted text report on simulation results to the Report file     MSX Functions      loadMSXFile  Opens the EPANET-MSX toolkit system    addMSXPattern  Adds a new, empty MSX source time pattern to the project    initializeMSXQualityAnalysis  Initializes the MSX system before solving for water quality results in step-wise fashion    saveMSXFile  Saves the data associated with the current MSX project into a new MSX input file    saveMSXQualityFile  Saves water quality results computed for each node, link and reporting time period to a named binary file    solveMSXCompleteHydraulics  Solves for system hydraulics over the entire simulation period saving results to an internal scratch file    solveMSXCompleteQuality  Solves for water quality over the entire simulation period and saves the results to an internal scratch file    stepMSXQualityAnalysisTimeLeft  Advances the water quality solution through a single water quality time step when performing a step-wise simulation    writeMSXFile  Write a new MSX file    writeMSXReport  Writes water quality simulations results as instructed by the MSX input file to a text file    writeMSXReportExe  Writes water quality simulations results as instructed by the MSX input file to a specific name text file    useMSXHydraulicFile  Uses a previously saved EPANET hydraulics file as the source of hydraulic information    plotMSXConcentrationSpeciesOfLinks  Plots the concentration species of links    plotMSXConcentrationSpeciesOfNodes  Plots the concentration species of nodes    runMSXexe  Writes water quality simulations results as instructed by the MSX input file to a text file using the epanetmsx.exe    unloadMSX  Closes the EPANET-MSX toolkit system    getMSXAtol  Retrieves the absolute concentration tolerance    getMSXRtol  Retrieves the relative concentration tolerance    getMSXComputedQualityLink  Retrieves the concentration of a chemical species at a specific link of the network at the current simulation time step    getMSXComputedQualityNode  Retrieves the concentration of a chemical species at a specific node of the network at the current simulation time step.    getMSXConstantsCount  Retrieves the number of constants    getMSXConstantsIndex  Retrieves the internal index number of constants (given its ID name)    getMSXConstantsNameID  Retrieves the ID name of constants (given its internal index number)    getMSXConstantsValue  Retrieves the value of a particular reaction constant    getMSXError  Returns the text for an error message given its error code    getMSXLinkInitqualValue  Retrieves the initial concentration of chemical species assigned to links of the pipe network    getMSXNodeInitqualValue  Retrieves the initial concentration of chemical species assigned to nodes    getMSXParametersCount  Retrieves the number of parameters    getMSXParametersIndex  Retrieves the indices of parameters    getMSXParametersNameID  Retrieves the ID name of parameters    getMSXParametersPipesValue  Retrieves the value of reaction parameters for pipes    getMSXParametersTanksValue  Retrieves the value of reaction parameters for tanks    getMSXPattern  Retrieves the multiplier factor for all patterns and all times    getMSXPatternValue  Retrieves the multiplier at a specific time period for a given source time pattern    getMSXPatternsCount  Retrieves the number of patterns    getMSXPatternsIndex  Retrieves the indices of patterns    getMSXPatternsLengths  Retrieves the number of time periods in all or some patterns    getMSXPatternsNameID  Retrieves the patterns IDs    getMSXSourceLevel  Retrieves the value of all nodes source level    getMSXSourceNodeNameID  Retrieves the ID label of all nodes    getMSXSourcePatternIndex  Retrieves the value of all node source pattern index    getMSXSourceType  Retrieves the value of all node source type    getMSXSources  Retrieves the source info    getMSXSpeciesATOL  Retrieves the atol    getMSXSpeciesRTOL  Retrieves the rtol    getMSXSpeciesConcentration  Retrieves the concentration of chemical species for nodes and links    getMSXSpeciesCount  Retrieves the number of species    getMSXSpeciesIndex  Retrieves the indices of species    getMSXSpeciesNameID  Retrieves the species IDs    getMSXSpeciesType  Retrieves the type of all species (BULK/WALL)    getMSXSpeciesUnits  Retrieves the species mass units    getMSXTimeStep  Retrieves the time step    getMSXRateUnits  Retrieves the rate/time units (SEC/MIN/HR/DAY)    getMSXAreaUnits  Retrieves the area units (FT2/M2/CM2)    getMSXCompiler  Retrieves the compiler (NONE/VC/GC)    getMSXCoupling  Retrieves the coupling (FULL/NONE)    getMSXEquationsPipes  Retrieves the species dynamics in pipes    getMSXEquationsTanks  Retrieves the species dynamics in tanks    getMSXEquationsTerms  Retrieves the species dynamics in terms    getMSXSolver  Retrieves the solver (EUL/RK5/ROS2)    setMSXAreaUnitsCM2  Sets area units to CM2    setMSXAreaUnitsFT2  Sets area units to FT2    setMSXAreaUnitsM2  Sets area units to M2    setMSXAtol  Sets the value of Atol    setMSXRtol  Sets the value of Rtol    setMSXCompilerGC  Sets compilet to GC    setMSXCompilerNONE  Sets compiler to None    setMSXCompilerVC  Sets compiler to VC    setMSXConstantsValue  Assigns a new value to a specific reaction constant    setMSXCouplingFULL  Sets coupling option to FULL    setMSXCouplingNONE  Sets coupling option to NONE    setMSXLinkInitqualValue  Assigns an initial concentration of chemical species to links    setMSXNodeInitqualValue  Assigns an initial concentration of chemical species to nodes    setMSXParametersPipesValue  Assigns a value to a particular reaction parameter for given pipes    setMSXParametersTanksValue  Assigns a value to a particular reaction parameter for given tanks    setMSXPattern  Sets all of the multiplier factors for a specific time pattern    setMSXPatternMatrix  Sets all of the multiplier factors for all patterns    setMSXPatternValue  Assigns a new value to the multiplier for a specific time period in a given MSX source time pattern    setMSXRateUnitsDAY  Sets rate units to DAY    setMSXRateUnitsHR  Sets rate units to HR    setMSXRateUnitsMIN  Sets rate units to MIN    setMSXRateUnitsSEC  Sets rate units to SEC    setMSXSolverEUL  Sets solver to EUL (standard Euler integrator)    setMSXSolverRK5  Sets solver to RK5 (Runge-Kutta 5th order integrator)    setMSXSolverROS2  Sets solver to ROS2 (2nd order Rosenbrock integrator)    setMSXSources  Sets the attributes of an external source of a particular chemical species to a specific node of the pipe network    setMSXTimeStep  Sets time step    Bin Functions     BinClose  Close binary files and delete    BinUpdateClass  Run all bin functions and update the results    Binplot  Plot the network input file    addBinControl  Adds a new control to the network    addBinCurveEfficiency  Adds a new curve efficiency to the network    addBinCurveHeadloss  Adds a new curve headloss to the network    addBinCurvePump  Adds a new curve pump to the network    addBinCurveVolume  Adds a new curve volume to the network    addBinJunction  Adds a new junction to the network    addBinPattern  Adds a new time pattern to the network    addBinPipe  Adds a new pipe to the network    addBinPump  Adds a new pump to the network    addBinReservoir  Adds a new reservoir to the network    addBinTank  Adds a new tank to the network    addBinValveFCV  Adds a new valve FCV to the network    addBinValveGPV  Adds a new valve GPV to the network    addBinValvePBV  Adds a new valve PBV to the network    addBinValvePRV  Adds a new valve PRV to the network    addBinValvePSV  Adds a new valve PSV to the network    addBinValveTCV  Adds a new valve TCV to the network    removeBinControlLinkID  Removes a specific control based on link ID    removeBinControlNodeID  Removes a specific control based on node ID    removeBinCurveID  Removes a specific curve based on ID    removeBinLinkID  Removes a specific link based on ID    removeBinNodeID  Removes a specific node based on ID    removeBinRulesControlLinkID  Removes a specific rule based on link ID    removeBinRulesControlNodeID  Removes a specific rule based on node ID    saveBinInpFile  Writes all current network input data to a file using the format of an EPANET input file    getBinComputedAllParameters  Computes hydraulic and quality time series    getBinComputedAverageBulkReactionRate  Computes the average bulk reaction rate    getBinComputedAverageCostPerDay  Computes the average cost per day    getBinComputedAverageEfficiency  Computes the average efficiency    getBinComputedAverageKwatts  Computes the average Kwatts    getBinComputedAverageKwattsOrMillionGallons  Computes the average Kwatts or million gallons    getBinComputedAverageSourceInflow  Computes the average source inflow    getBinComputedAverageTankReactionRate  Computes the average tank reaction rate    getBinComputedAverageWallReactionRate  Computes average wall reaction rate    getBinComputedLinkFlow  Computes the flow of links    getBinComputedLinkFrictionFactor  Computes the link friction factor    getBinComputedLinkHeadloss  Computes the headloss of links    getBinComputedLinkQuality  Computes the quality of links    getBinComputedLinkReactionRate  Computes the reaction rate of links    getBinComputedLinkSetting  Computes the setting of links    getBinComputedLinkStatus  Computes the status of links    getBinComputedLinkVelocity  Computes the velocity of links    getBinComputedNodeDemand  Computes the demand of nodes    getBinComputedNodeHead  Computes the head of nodes    getBinComputedNodePressure  Computes the pressure of nodes    getBinComputedNodeQuality  Computes the quality of nodes    getBinComputedPeakKwatts  Computes the peak Kwatts    getBinComputedPumpIndexListLinks  Retrieves the pump indices    getBinComputedPumpUtilization  Computes the pump utilization    getBinDiameterEachLink  Retrieves the diameter of each link    getBinLengthEachLink  Retrieves the length of each link    getBinLinkIndex  Retrieves the indices of all links    getBinLinkNameID  Retrieves the ID label(s) of all links    getBinElevationEachNode  Retrieves the elevation of each node    getBinNodeCoordinates  Retrieves coordinate x, y, and x, y vertices for a node    getBinNodeIndex  Retrieves the indices of all nodes    getBinNodeNameID  Retrieves the ID label(s) of all nodes    getBinNumberReportingPeriods  Retrieves the number of reporting periods    getBinControlsInfo  Retrieves the controls info    getBinCurvesInfo  Retrieves the curves info    getBinLinksInfo  Retrieves the links info    getBinLimitingPotential  Retrieves limiting potential    getBinNodesInfo  Retrieves the nodes info    getBinNodeSourceInfo  Retrieves the sources info    getBinOptionsInfo  Retrieves the options info    getBinPatternsInfo  Retrieves the patterns info    getBinRulesControlsInfo  Retrieves the controls info    getBinTimesInfo  Retrieves the times info    getBinPatternIndex  Retrieves the indices of all patterns    getBinSimulationDuration  Retrieves the value of simulation duration    getBinSections  Retrieves some basic sections from inp file    getBinUnits  Retrieves the units used to express all flow rates    setBinFlowUnitsAFD  Sets flow units to AFD    setBinFlowUnitsCFS  Sets flow units to CFS    setBinFlowUnitsCMD  Sets flow units to CMD    setBinFlowUnitsCMH  Sets flow units to CMH    setBinFlowUnitsGPM  Sets flow units to GPM    setBinFlowUnitsIMGD  Sets flow units to IMGD    setBinFlowUnitsLPM  Sets flow units to LPM    setBinFlowUnitsLPS  Sets flow units to LPS    setBinFlowUnitsMGD  Sets flow units to MGD    setBinFlowUnitsMLD  Sets flow units to MLD    setBinHeadlossCM  Sets headloss to C-M    setBinHeadlossDW  Sets headloss to D-W    setBinHeadlossHW  Sets headloss to H-W    setBinLinkGlobalBulkReactionCoeff  Sets the global bulk reaction rate coeff.    setBinLinkGlobalWallReactionCoeff  Sets the global wall reaction rate coeff.    setBinLimitingPotential  Sets limiting potential    setBinLinkPipeDiameters  Sets the values of pipe diameters    setBinLinkPipeLengths  Sets the values of pipe lengths    setBinLinkPipeMinorLoss  Sets the values of pipe minor losses    setBinLinkPipeRoughness  Sets the values of pipe roughness    setBinLinkPipeStatus  Sets the values of pipe status    setBinLinkPipesParameters  Sets the values of pipe parameters (diameters, lengths, minor losses, roughness, status)    setBinLinkPumpStatus  Sets the values of pump status    setBinLinkReactionCoeff  Sets the values of bulk and wall reaction coeff.    setBinLinkValvesParameters  Sets the values of valve parameters (diameters, types, settings, minor losses)    setBinNodeJunDemandPatternNameID  Sets the names of demand pattern IDs for junctions    setBinNodeInitialQuality  Sets the values of initial qualities    setBinNodeJunctionElevation  Sets the values of elevations for junctions    setBinNodeJunctionsBaseDemands  Sets the values of base demands    setBinNodeJunctionsParameters  Sets the values of junction parameters (elevations, base demands, demand patterns)    setBinNodeResDemandPatternNameID  Sets the names of demand pattern IDs for reservoirs    setBinNodeReservoirElevation  Sets the values of elevations for reservoirs    setBinNodeReservoirParameters  Sets the values of reservoir parameters (elevations, patterns)    setBinNodeSourceQuality  Sets the values of source qualities    setBinNodeTankDiameter  Sets the values of tanks diameter    setBinNodeTankElevation  Sets the values of tanks elevation    setBinNodeTankInitialLevel  Sets the values of tanks initial level    setBinNodeTankMaximumWaterLevel  Sets the values of tanks maximum water level    setBinNodeTankMinimumWaterLevel  Sets the values of tanks minimum water level    setBinNodeTankMinimumWaterVolume  Sets the values of tanks minimum water volume    setBinNodeTankParameters  Sets the values of reservoir parameters (elevations, initialLevels, minLevels, maxLevels, diameters, minVolume, mixfraction)    setBinPattern  Sets all of the multiplier factors for a specific time pattern    setBinQualityAge  Sets the type of water quality analysis to Age    setBinQualityChem  Sets the type of water quality analysis to Chem    setBinQualityNone  Sets the type of water quality analysis to None    setBinQualityTrace  Sets the type of water quality analysis to Trace    setBinQualType  Sets the type of water quality analysis to any chem e.g. chlorine    setBinTimeHydraulicStep  Sets the hydraulic step    setBinTimePatternStart  Sets the pattern start    setBinTimePatternStep  Sets the pattern step    setBinTimeQualityStep  Sets the quality step    setBinTimeReportingStart  Sets the reporting start    setBinTimeReportingStep  Sets the reporting step    setBinTimeSimulationDuration  Sets the simulation duration    setBinTimeStatisticsAverage  Sets the statistic type to Average    setBinTimeStatisticsMaximum  Sets the statistic type to Maximum    setBinTimeStatisticsMinimum  Sets the statistic type to Minimum    setBinTimeStatisticsNone  Sets the statistic type to None    setBinTimeStatisticsRange  Sets the statistic type to Range", 
            "title": "List of Matlab Class Functions"
        }, 
        {
            "location": "/#list-of-epanet-21-functions-supported", 
            "text": "Function  Description      ENgetpumptype  Retrieves the type of a pump for specific link index    ENgetheadcurveindex  Retrieves index of a head curve for specific link index    ENsetcurvevalue  Sets x,y point for a specific point and curve    ENsetcurve  Sets x,y values for a specific curve    ENaddcurve  Adds a new curve appended to the end of the existing curves    ENgetcurvevalue  Retrieves x,y point for a specific point number and curve    ENgetcurvelen  Retrieves number of points in a curve    ENgetcurveid  Retrieves ID of a curve with specific index    ENgetcurveindex  Retrieves index of curve with specific ID    ENsetcoord  Sets coordinate x, y for a node    ENgetcoord  Retrieves coordinate x, y for a node    ENgetstatistic  Retrieves hydraulic simulation statistic    ENgetnumdemands  Retrieves the number of demand categories for a node    ENgetbasedemand  Retrieves the nodes base demand for a category    ENgetdemandpattern  Retrieves the index of a demand pattern for a specific demand category of a node    ENsetbasedemand  Sets the nodes base demand for a category    ENgetaveragepatternvalue  Retrieves the average value of a pattern", 
            "title": "List of EPANET 2.1 Functions Supported"
        }, 
        {
            "location": "/#list-of-other-new-epanet-functions-supported", 
            "text": "Function  Description      ENaddnode  Adds a new node    ENaddlink  Adds a new link    ENdeletenode  Deletes a node    ENdeletelink  Deletes a link    ENsetheadcurveindex  Sets the curve index for a specified pump index    ENsetdemandpattern  Sets the index of the demand pattern assigned to a node for a category index.", 
            "title": "List of other new EPANET Functions Supported"
        }, 
        {
            "location": "/examples/", 
            "text": "Examples\n\n\nTest 1", 
            "title": "Examples"
        }, 
        {
            "location": "/examples/#examples", 
            "text": "Test 1", 
            "title": "Examples"
        }, 
        {
            "location": "/about/", 
            "text": "EPANET-MATLAB-Toolkit\n\n\nThe \nEPANET-Matlab Toolkit\n is an open-source software, originally developed by the \nKIOS Research Center for Intelligent Systems and Networks of the University of Cyprus\n which operates within the Matlab environment, for providing a programming interface for the latest version of \nEPANET\n, a hydraulic and quality modeling software created by the US EPA, with Matlab, a  high-level technical computing software. The goal of the EPANET Matlab Toolkit is to serve as a common programming framework for research and development in the growing field of smart water networks.\n\n\nThe \nEPANET-Matlab Toolkit\n features easy to use commands/wrappers for viewing, modifying, simulating and plotting results produced by the EPANET libraries.  \n\n\nFor support, please use the OWA community forum : \nhttp://community.wateranalytics.org/", 
            "title": "About"
        }, 
        {
            "location": "/about/#epanet-matlab-toolkit", 
            "text": "The  EPANET-Matlab Toolkit  is an open-source software, originally developed by the  KIOS Research Center for Intelligent Systems and Networks of the University of Cyprus  which operates within the Matlab environment, for providing a programming interface for the latest version of  EPANET , a hydraulic and quality modeling software created by the US EPA, with Matlab, a  high-level technical computing software. The goal of the EPANET Matlab Toolkit is to serve as a common programming framework for research and development in the growing field of smart water networks.  The  EPANET-Matlab Toolkit  features easy to use commands/wrappers for viewing, modifying, simulating and plotting results produced by the EPANET libraries.    For support, please use the OWA community forum :  http://community.wateranalytics.org/", 
            "title": "EPANET-MATLAB-Toolkit"
        }
    ]
}